@import './var.less';

// var '--' prefix attr
.set-component-var(@component, @varName, @value) {
  @{prefix}-@{component}-@{varName}: @value;
}

.set-component-var-root(@component, @varName, @var) {
  @{prefix}-@{component}-@{varName}: ~'var(@{prefix}-@{var})';
}

.useCssVar(@var) {
  @return: ~'var(--@{var})';
}

.useComponentCssVar(@component, @var) {
  @return: ~'var(@{prefix}-@{component}-@{var});'
}

.useRootCssVar(@var) {
  @return: ~'var(@{prefix}-@{var})'
}

// bem mixins
.set-component(@component, @mixin) {
  .@{baseName}-@{component} {
    @mixin();
  }
}

.set-component-b(@component, @block, @mixin) {
  .@{baseName}-@{component}-@{block} {
    @mixin();
  }
}

.set-component-e(@component, @element, @mixin) {
  .@{baseName}-@{component}__@{element} {
    @mixin();
  }
}

.set-component-m(@component, @modifier, @mixin) {
  .@{baseName}-@{component}__@{modifier} {
    @mixin();
  }
}

.set-component-be(@component, @block, @element, @mixin) {
  .@{baseName}-@{component}-@{block}__@{element} {
    @mixin();
  }
}

.set-component-bm(@component, @block, @modifier, @mixin) {
  .@{baseName}-@{component}-@{block}--@{modifier} {
    @mixin();
  }
}

.set-component-em(@component, @element, @modifier, @mixin) {
  .@{baseName}-@{component}__@{element}--@{modifier} {
    @mixin();
  }
}

.set-component-bem(@component, @block, @element, @modifier, @mixin) {
  .@{baseName}-@{component}-@{block}__@{element}--@{modifier} {
    @mixin();
  }
}

// remove dot(.) prefix, it's bad for CSS specificity
.useComponent(@component) {
  @return: ~'@{baseName}-@{component}'
}

.useB(@component, @block) {
  @return: ~'@{baseName}-@{component}-@{block}'
}

.useE(@component, @element) {
  @return: ~'@{baseName}-@{component}__@{element}'
}

.useM(@component, @modifier) {
  @return: ~'@{baseName}-@{component}--@{modifier}'
}

.useBE(@component, @block, @element) {
  @return: ~'@{baseName}-@{component}-@{block}__@{element}'
}

.useBM(@component, @block, @modifier) {
  @return: ~'@{baseName}-@{component}-@{block}--@{modifier}'
}

.useEM(@component, @element, @modifier) {
  @return: ~'@{baseName}-@{component}__@{element}--@{modifier}'
}

.useBEM(@component, @block, @element, @modifier) {
  @return: ~'@{baseName}-@{component}-@{block}__@{element}--@{modifier}'
}

// utils mixin

.hv-center-inline-flex() {
  display: inline-flex;
  justify-content: center;
  align-items: center;
}

.h-center-inline-flex() {
  display: inline-flex;
  justify-content: center;
}

.v-center-inline-flex() {
  display: inline-flex;
  align-items: center;
}

.clickable() {
  cursor: pointer;
}