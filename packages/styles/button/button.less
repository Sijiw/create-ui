@import "../mixins.less";
@import "../theme/color.less";

@button: .useComponent(button)[@return];
@icon: .useComponent(icon)[@return];

.set-colors(@index) when(@index <= @themeLen) {
  @currentTheme: extract(@themes, @index);

  .@{button}--@{currentTheme} {
    color: #fff;
    background-color: .useRootCssVar(~'color-@{currentTheme}')[@return];
    &:hover {
      background-color: .useRootCssVar(~'color-@{currentTheme}-light-3')[@return];
    }

    &.disabled{ 
      .disabled();
      --button-color: .useRootCssVar(~'color-@{currentTheme}-light-7')[@return];
      background-color: var(--button-color);
      &:hover {
        background-color: var(--button-color);
      }
    }
  }

  .set-colors(@index + 1);
}

.button-mixin() {
  // box-sizing: content-box;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  // color
  .set-component-var(button, bg-color, #fff);
  .set-component-var-root(button, text-color, color-primary-text);

  @hover-bg-color: .useRootCssVar(color-primary-light-9)[@return];
  
  color: .useComponentCssVar(button, text-color)[@return];
  background-color: .useComponentCssVar(button, bg-color)[@return];
  // font
  font-size: 14px;
  font-weight: 500;
  // size
  border: 1px solid .useRootCssVar(color-border-base);
  border-radius: 4px;

  line-height: 1;
  height: 32px;
  padding: 8px 16px;
  transition: all 0.3s;
  // transition: transform .1s;

  // 相邻button间隔
  + .@{button} {
    margin-left: 12px;
  }

  &:hover {
    background-color: @hover-bg-color;
  }

  &:active {
    transform: scale(0.95);
  }

  &.round {
    border-radius: 40px;
  }

  &.circle {
    border-radius: 50%;
    padding: 8px;
    .y-button-icon {
      margin: 0;
    }
  }

  &.disabled {
    cursor: not-allowed;
    &:hover {
      background-image: none;
    }
    &:active {
      transform: none;
    }
  }

  &.@{button}--large {
    height: 40px;
    padding: 12px 20px;
  }
  
  &.@{button}--small {
    height: 24px;
    padding: 4px 12px;
  }

  .@{button}-icon:has(+ .@{button}-text) {
    margin-right: 4px;
  }

  .@{icon} {
    .hv-center-inline-flex();
  }

  .@{button}-icon {
    .hv-center-inline-flex();
  }
}

@buttonMixin: .button-mixin();

.set-component(button, @buttonMixin);
.set-colors(1);